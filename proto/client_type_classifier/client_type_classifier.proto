syntax = "proto3";
option go_package = "proto.client.type.classifier";

service ClientTypeClassifierService {
  rpc List(ListClientTypeClassifierRequest) returns (ListClientTypeClassifierResponse);
  rpc Create(CreateClientTypeClassifierRequest) returns (ClientTypeClassifierProfileResponse);
  rpc Get(SingleClientTypeClassifierRequest) returns (ClientTypeClassifierProfileResponse);
  rpc Update(UpdateClientTypeClassifierRequest) returns (SuccessResponse);
  rpc Delete(SingleClientTypeClassifierRequest) returns (SuccessResponse);
}

message ListClientTypeClassifierRequest {
  int32 page_number = 1;
  int32 page_size = 2;
}

message ListClientTypeClassifierResponse {
  repeated ClientTypeClassifierProfileResponse client_type_classifiers = 1;
}

message CreateClientTypeClassifierRequest {
  string code = 1;
  string name = 2;
  string short_name = 3;
  int32 client_type = 4;
  string activation_date = 5;
  string deactivation_date = 6;
  int32 cbu_reference_key = 7;
  int32 old_code = 8;
  string old_name = 9;
  string name_uz = 10;
  string flex_fin_id = 11;
}

message SingleClientTypeClassifierRequest {
  oneof client_type_classifier_identifier {
    string id = 1;
    string code = 2;
  }
}

message ClientTypeClassifierProfileResponse {
  string id = 1;
  string code = 2;
  string name = 3;
  string short_name = 4;
  int32 client_type = 5;
  string activation_date = 6;
  string deactivation_date = 7;
  int32 cbu_reference_key = 8;
  int32 old_code = 9;
  string old_name = 10;
  string name_uz = 11;
  string flex_fin_id = 12;
  string deleted_at = 13;
}

message SuccessResponse {
  string response = 1;
}

message UpdateClientTypeClassifierRequest {
  string id = 1;
  string code = 2;
  string name = 3;
  string short_name = 4;
  int32 client_type = 5;
  string activation_date = 6;
  string deactivation_date = 7;
  int32 cbu_reference_key = 8;
  int32 old_code = 9;
  string old_name = 10;
  string name_uz = 11;
  string flex_fin_id = 12;
}