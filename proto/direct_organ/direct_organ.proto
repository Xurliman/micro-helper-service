syntax = "proto3";
option go_package="proto.direct.organ";

service DirectOrganService {
  rpc List(ListDirectOrganRequest) returns (ListDirectOrganResponse);
  rpc Create(CreateDirectOrganRequest) returns (DirectOrganProfileResponse);
  rpc Get(SingleDirectOrganRequest) returns (DirectOrganProfileResponse);
  rpc Update(UpdateDirectOrganRequest) returns (SuccessResponse);
  rpc Delete(SingleDirectOrganRequest) returns (SuccessResponse);
}

message ListDirectOrganRequest {
  int32 page_number = 1;
  int32 page_size = 2;
}

message ListDirectOrganResponse {
  repeated DirectOrganProfileResponse direct_organs = 1;
}

message CreateDirectOrganRequest{
  int64 code = 1;
  string name = 2;
  string short_name = 3;
  int64 cbu_code = 4;
}

message SingleDirectOrganRequest{
  oneof direct_organ {
    int64 id = 1;
    string code = 2;
  }
}

message DirectOrganProfileResponse{
  int64 id = 1;
  int64 code = 2;
  string name = 3;
  string short_name = 4;
  int64 cbu_code = 5;
}

message SuccessResponse{
  string response = 1;
}

message UpdateDirectOrganRequest{
  int64 id = 1;
  int64 code = 2;
  string name = 3;
  string short_name = 4;
  int64 cbu_code = 5;
}


/*
protoc \
--proto_path=proto/direct_organ \
--go_out=proto/direct_organ \
--go_opt=paths=source_relative proto/direct_organ/direct_organ.proto \
--go-grpc_out=proto/direct_organ \
--go-grpc_opt=paths=source_relative proto/direct_organ/direct_organ.proto
*/