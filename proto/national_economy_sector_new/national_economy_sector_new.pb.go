// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: national_economy_sector_new.proto

package proto_national_economy_sector_new

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNationalEconomySectorNewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code             string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NameUz           string `protobuf:"bytes,3,opt,name=name_uz,json=nameUz,proto3" json:"name_uz,omitempty"`
	Section          int32  `protobuf:"varint,4,opt,name=section,proto3" json:"section,omitempty"`
	SectionCode      string `protobuf:"bytes,5,opt,name=section_code,json=sectionCode,proto3" json:"section_code,omitempty"`
	SectionName      string `protobuf:"bytes,6,opt,name=section_name,json=sectionName,proto3" json:"section_name,omitempty"`
	SectionNameUz    string `protobuf:"bytes,7,opt,name=section_name_uz,json=sectionNameUz,proto3" json:"section_name_uz,omitempty"`
	GroupCode        string `protobuf:"bytes,8,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`
	GroupName        string `protobuf:"bytes,9,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupNameUz      string `protobuf:"bytes,10,opt,name=group_name_uz,json=groupNameUz,proto3" json:"group_name_uz,omitempty"`
	Group1Code       string `protobuf:"bytes,11,opt,name=group1_code,json=group1Code,proto3" json:"group1_code,omitempty"`
	Group1Name       string `protobuf:"bytes,12,opt,name=group1_name,json=group1Name,proto3" json:"group1_name,omitempty"`
	Group1NameUz     string `protobuf:"bytes,13,opt,name=group1_name_uz,json=group1NameUz,proto3" json:"group1_name_uz,omitempty"`
	Group2Code       string `protobuf:"bytes,14,opt,name=group2_code,json=group2Code,proto3" json:"group2_code,omitempty"`
	Group2Name       string `protobuf:"bytes,15,opt,name=group2_name,json=group2Name,proto3" json:"group2_name,omitempty"`
	Group2NameUz     string `protobuf:"bytes,16,opt,name=group2_name_uz,json=group2NameUz,proto3" json:"group2_name_uz,omitempty"`
	ActivationDate   string `protobuf:"bytes,17,opt,name=activation_date,json=activationDate,proto3" json:"activation_date,omitempty"`
	DeactivationDate string `protobuf:"bytes,18,opt,name=deactivation_date,json=deactivationDate,proto3" json:"deactivation_date,omitempty"`
}

func (x *CreateNationalEconomySectorNewRequest) Reset() {
	*x = CreateNationalEconomySectorNewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_national_economy_sector_new_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNationalEconomySectorNewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNationalEconomySectorNewRequest) ProtoMessage() {}

func (x *CreateNationalEconomySectorNewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_national_economy_sector_new_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNationalEconomySectorNewRequest.ProtoReflect.Descriptor instead.
func (*CreateNationalEconomySectorNewRequest) Descriptor() ([]byte, []int) {
	return file_national_economy_sector_new_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNationalEconomySectorNewRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetNameUz() string {
	if x != nil {
		return x.NameUz
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetSection() int32 {
	if x != nil {
		return x.Section
	}
	return 0
}

func (x *CreateNationalEconomySectorNewRequest) GetSectionCode() string {
	if x != nil {
		return x.SectionCode
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetSectionName() string {
	if x != nil {
		return x.SectionName
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetSectionNameUz() string {
	if x != nil {
		return x.SectionNameUz
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetGroupCode() string {
	if x != nil {
		return x.GroupCode
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetGroupNameUz() string {
	if x != nil {
		return x.GroupNameUz
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetGroup1Code() string {
	if x != nil {
		return x.Group1Code
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetGroup1Name() string {
	if x != nil {
		return x.Group1Name
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetGroup1NameUz() string {
	if x != nil {
		return x.Group1NameUz
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetGroup2Code() string {
	if x != nil {
		return x.Group2Code
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetGroup2Name() string {
	if x != nil {
		return x.Group2Name
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetGroup2NameUz() string {
	if x != nil {
		return x.Group2NameUz
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetActivationDate() string {
	if x != nil {
		return x.ActivationDate
	}
	return ""
}

func (x *CreateNationalEconomySectorNewRequest) GetDeactivationDate() string {
	if x != nil {
		return x.DeactivationDate
	}
	return ""
}

type SingleNationalEconomySectorNewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SingleNationalEconomySectorNewRequest) Reset() {
	*x = SingleNationalEconomySectorNewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_national_economy_sector_new_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleNationalEconomySectorNewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleNationalEconomySectorNewRequest) ProtoMessage() {}

func (x *SingleNationalEconomySectorNewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_national_economy_sector_new_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleNationalEconomySectorNewRequest.ProtoReflect.Descriptor instead.
func (*SingleNationalEconomySectorNewRequest) Descriptor() ([]byte, []int) {
	return file_national_economy_sector_new_proto_rawDescGZIP(), []int{1}
}

func (x *SingleNationalEconomySectorNewRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NationalEconomySectorNewProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code             string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	NameUz           string `protobuf:"bytes,4,opt,name=name_uz,json=nameUz,proto3" json:"name_uz,omitempty"`
	Section          int32  `protobuf:"varint,5,opt,name=section,proto3" json:"section,omitempty"`
	SectionCode      string `protobuf:"bytes,6,opt,name=section_code,json=sectionCode,proto3" json:"section_code,omitempty"`
	SectionName      string `protobuf:"bytes,7,opt,name=section_name,json=sectionName,proto3" json:"section_name,omitempty"`
	SectionNameUz    string `protobuf:"bytes,8,opt,name=section_name_uz,json=sectionNameUz,proto3" json:"section_name_uz,omitempty"`
	GroupCode        string `protobuf:"bytes,9,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`
	GroupName        string `protobuf:"bytes,10,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupNameUz      string `protobuf:"bytes,11,opt,name=group_name_uz,json=groupNameUz,proto3" json:"group_name_uz,omitempty"`
	Group1Code       string `protobuf:"bytes,12,opt,name=group1_code,json=group1Code,proto3" json:"group1_code,omitempty"`
	Group1Name       string `protobuf:"bytes,13,opt,name=group1_name,json=group1Name,proto3" json:"group1_name,omitempty"`
	Group1NameUz     string `protobuf:"bytes,14,opt,name=group1_name_uz,json=group1NameUz,proto3" json:"group1_name_uz,omitempty"`
	Group2Code       string `protobuf:"bytes,15,opt,name=group2_code,json=group2Code,proto3" json:"group2_code,omitempty"`
	Group2Name       string `protobuf:"bytes,16,opt,name=group2_name,json=group2Name,proto3" json:"group2_name,omitempty"`
	Group2NameUz     string `protobuf:"bytes,17,opt,name=group2_name_uz,json=group2NameUz,proto3" json:"group2_name_uz,omitempty"`
	ActivationDate   string `protobuf:"bytes,18,opt,name=activation_date,json=activationDate,proto3" json:"activation_date,omitempty"`
	DeactivationDate string `protobuf:"bytes,19,opt,name=deactivation_date,json=deactivationDate,proto3" json:"deactivation_date,omitempty"`
}

func (x *NationalEconomySectorNewProfileResponse) Reset() {
	*x = NationalEconomySectorNewProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_national_economy_sector_new_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NationalEconomySectorNewProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NationalEconomySectorNewProfileResponse) ProtoMessage() {}

func (x *NationalEconomySectorNewProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_national_economy_sector_new_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NationalEconomySectorNewProfileResponse.ProtoReflect.Descriptor instead.
func (*NationalEconomySectorNewProfileResponse) Descriptor() ([]byte, []int) {
	return file_national_economy_sector_new_proto_rawDescGZIP(), []int{2}
}

func (x *NationalEconomySectorNewProfileResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NationalEconomySectorNewProfileResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetNameUz() string {
	if x != nil {
		return x.NameUz
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetSection() int32 {
	if x != nil {
		return x.Section
	}
	return 0
}

func (x *NationalEconomySectorNewProfileResponse) GetSectionCode() string {
	if x != nil {
		return x.SectionCode
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetSectionName() string {
	if x != nil {
		return x.SectionName
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetSectionNameUz() string {
	if x != nil {
		return x.SectionNameUz
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetGroupCode() string {
	if x != nil {
		return x.GroupCode
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetGroupNameUz() string {
	if x != nil {
		return x.GroupNameUz
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetGroup1Code() string {
	if x != nil {
		return x.Group1Code
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetGroup1Name() string {
	if x != nil {
		return x.Group1Name
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetGroup1NameUz() string {
	if x != nil {
		return x.Group1NameUz
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetGroup2Code() string {
	if x != nil {
		return x.Group2Code
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetGroup2Name() string {
	if x != nil {
		return x.Group2Name
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetGroup2NameUz() string {
	if x != nil {
		return x.Group2NameUz
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetActivationDate() string {
	if x != nil {
		return x.ActivationDate
	}
	return ""
}

func (x *NationalEconomySectorNewProfileResponse) GetDeactivationDate() string {
	if x != nil {
		return x.DeactivationDate
	}
	return ""
}

type SuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SuccessResponse) Reset() {
	*x = SuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_national_economy_sector_new_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResponse) ProtoMessage() {}

func (x *SuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_national_economy_sector_new_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResponse.ProtoReflect.Descriptor instead.
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return file_national_economy_sector_new_proto_rawDescGZIP(), []int{3}
}

func (x *SuccessResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type UpdateNationalEconomySectorNewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code             string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	NameUz           string `protobuf:"bytes,4,opt,name=name_uz,json=nameUz,proto3" json:"name_uz,omitempty"`
	Section          int32  `protobuf:"varint,5,opt,name=section,proto3" json:"section,omitempty"`
	SectionCode      string `protobuf:"bytes,6,opt,name=section_code,json=sectionCode,proto3" json:"section_code,omitempty"`
	SectionName      string `protobuf:"bytes,7,opt,name=section_name,json=sectionName,proto3" json:"section_name,omitempty"`
	SectionNameUz    string `protobuf:"bytes,8,opt,name=section_name_uz,json=sectionNameUz,proto3" json:"section_name_uz,omitempty"`
	GroupCode        string `protobuf:"bytes,9,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`
	GroupName        string `protobuf:"bytes,10,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupNameUz      string `protobuf:"bytes,11,opt,name=group_name_uz,json=groupNameUz,proto3" json:"group_name_uz,omitempty"`
	Group1Code       string `protobuf:"bytes,12,opt,name=group1_code,json=group1Code,proto3" json:"group1_code,omitempty"`
	Group1Name       string `protobuf:"bytes,13,opt,name=group1_name,json=group1Name,proto3" json:"group1_name,omitempty"`
	Group1NameUz     string `protobuf:"bytes,14,opt,name=group1_name_uz,json=group1NameUz,proto3" json:"group1_name_uz,omitempty"`
	Group2Code       string `protobuf:"bytes,15,opt,name=group2_code,json=group2Code,proto3" json:"group2_code,omitempty"`
	Group2Name       string `protobuf:"bytes,16,opt,name=group2_name,json=group2Name,proto3" json:"group2_name,omitempty"`
	Group2NameUz     string `protobuf:"bytes,17,opt,name=group2_name_uz,json=group2NameUz,proto3" json:"group2_name_uz,omitempty"`
	ActivationDate   string `protobuf:"bytes,18,opt,name=activation_date,json=activationDate,proto3" json:"activation_date,omitempty"`
	DeactivationDate string `protobuf:"bytes,19,opt,name=deactivation_date,json=deactivationDate,proto3" json:"deactivation_date,omitempty"`
}

func (x *UpdateNationalEconomySectorNewRequest) Reset() {
	*x = UpdateNationalEconomySectorNewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_national_economy_sector_new_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNationalEconomySectorNewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNationalEconomySectorNewRequest) ProtoMessage() {}

func (x *UpdateNationalEconomySectorNewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_national_economy_sector_new_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNationalEconomySectorNewRequest.ProtoReflect.Descriptor instead.
func (*UpdateNationalEconomySectorNewRequest) Descriptor() ([]byte, []int) {
	return file_national_economy_sector_new_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNationalEconomySectorNewRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateNationalEconomySectorNewRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetNameUz() string {
	if x != nil {
		return x.NameUz
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetSection() int32 {
	if x != nil {
		return x.Section
	}
	return 0
}

func (x *UpdateNationalEconomySectorNewRequest) GetSectionCode() string {
	if x != nil {
		return x.SectionCode
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetSectionName() string {
	if x != nil {
		return x.SectionName
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetSectionNameUz() string {
	if x != nil {
		return x.SectionNameUz
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetGroupCode() string {
	if x != nil {
		return x.GroupCode
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetGroupNameUz() string {
	if x != nil {
		return x.GroupNameUz
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetGroup1Code() string {
	if x != nil {
		return x.Group1Code
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetGroup1Name() string {
	if x != nil {
		return x.Group1Name
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetGroup1NameUz() string {
	if x != nil {
		return x.Group1NameUz
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetGroup2Code() string {
	if x != nil {
		return x.Group2Code
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetGroup2Name() string {
	if x != nil {
		return x.Group2Name
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetGroup2NameUz() string {
	if x != nil {
		return x.Group2NameUz
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetActivationDate() string {
	if x != nil {
		return x.ActivationDate
	}
	return ""
}

func (x *UpdateNationalEconomySectorNewRequest) GetDeactivationDate() string {
	if x != nil {
		return x.DeactivationDate
	}
	return ""
}

var File_national_economy_sector_new_proto protoreflect.FileDescriptor

var file_national_economy_sector_new_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x65, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x04, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x7a,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75,
	0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x75, 0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x31, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x31, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x31, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x31, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x7a, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x75, 0x7a, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x32, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x37,
	0x0a, 0x25, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8a, 0x05, 0x0a, 0x27, 0x4e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x75, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61,
	0x6d, 0x65, 0x55, 0x7a, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x7a, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x7a, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x1f,
	0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x75, 0x7a, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31,
	0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x32, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x32, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x32, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x32, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x7a, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x88, 0x05, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x7a,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75,
	0x7a, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x75, 0x7a, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x31, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x31, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x31, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x31, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x7a, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x75, 0x7a, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x32, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x7a, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x32, 0xdf,
	0x02, 0x0a, 0x1f, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58,
	0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x26, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x23, 0x5a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x73, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x6e, 0x65, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_national_economy_sector_new_proto_rawDescOnce sync.Once
	file_national_economy_sector_new_proto_rawDescData = file_national_economy_sector_new_proto_rawDesc
)

func file_national_economy_sector_new_proto_rawDescGZIP() []byte {
	file_national_economy_sector_new_proto_rawDescOnce.Do(func() {
		file_national_economy_sector_new_proto_rawDescData = protoimpl.X.CompressGZIP(file_national_economy_sector_new_proto_rawDescData)
	})
	return file_national_economy_sector_new_proto_rawDescData
}

var file_national_economy_sector_new_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_national_economy_sector_new_proto_goTypes = []interface{}{
	(*CreateNationalEconomySectorNewRequest)(nil),   // 0: CreateNationalEconomySectorNewRequest
	(*SingleNationalEconomySectorNewRequest)(nil),   // 1: SingleNationalEconomySectorNewRequest
	(*NationalEconomySectorNewProfileResponse)(nil), // 2: NationalEconomySectorNewProfileResponse
	(*SuccessResponse)(nil),                         // 3: SuccessResponse
	(*UpdateNationalEconomySectorNewRequest)(nil),   // 4: UpdateNationalEconomySectorNewRequest
}
var file_national_economy_sector_new_proto_depIdxs = []int32{
	0, // 0: NationalEconomySectorNewService.Create:input_type -> CreateNationalEconomySectorNewRequest
	1, // 1: NationalEconomySectorNewService.Read:input_type -> SingleNationalEconomySectorNewRequest
	4, // 2: NationalEconomySectorNewService.Update:input_type -> UpdateNationalEconomySectorNewRequest
	1, // 3: NationalEconomySectorNewService.Delete:input_type -> SingleNationalEconomySectorNewRequest
	2, // 4: NationalEconomySectorNewService.Create:output_type -> NationalEconomySectorNewProfileResponse
	2, // 5: NationalEconomySectorNewService.Read:output_type -> NationalEconomySectorNewProfileResponse
	3, // 6: NationalEconomySectorNewService.Update:output_type -> SuccessResponse
	3, // 7: NationalEconomySectorNewService.Delete:output_type -> SuccessResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_national_economy_sector_new_proto_init() }
func file_national_economy_sector_new_proto_init() {
	if File_national_economy_sector_new_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_national_economy_sector_new_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNationalEconomySectorNewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_national_economy_sector_new_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleNationalEconomySectorNewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_national_economy_sector_new_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NationalEconomySectorNewProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_national_economy_sector_new_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_national_economy_sector_new_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNationalEconomySectorNewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_national_economy_sector_new_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_national_economy_sector_new_proto_goTypes,
		DependencyIndexes: file_national_economy_sector_new_proto_depIdxs,
		MessageInfos:      file_national_economy_sector_new_proto_msgTypes,
	}.Build()
	File_national_economy_sector_new_proto = out.File
	file_national_economy_sector_new_proto_rawDesc = nil
	file_national_economy_sector_new_proto_goTypes = nil
	file_national_economy_sector_new_proto_depIdxs = nil
}
